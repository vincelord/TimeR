<Application x:Class="VTility.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:VTility"
    xmlns:logic="clr-namespace:VTility.Logic"
    xmlns:window="clr-namespace:VTility.Windows"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    ShutdownMode="OnExplicitShutdown"
    StartupUri="Windows/WMain.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- merge NotifyIcon and related stuff into the application -->
                <ResourceDictionary Source="NotifyIconResources.xaml" />

                <!--<materialDesign:CustomColorTheme BaseTheme="Light" PrimaryColor="Aqua" SecondaryColor="DarkGreen" />-->
                <materialDesign:BundledTheme BaseTheme="Dark" PrimaryColor="LightGreen" SecondaryColor="Cyan" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <logic:TimerTicker x:Key="ticker" />

            <Storyboard x:Key="storyEnd">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Completed="DoubleAnimationUsingKeyFrames_Completed">
                    <SplineDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                    <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <ControlTemplate x:Key="PopupTemplate" TargetType="local:BasePopup">
                <Grid x:Name="popupGrid" RenderTransformOrigin="0,1">

                    <Border Background="#FF252525" CornerRadius="10">
                        <WrapPanel Orientation="Vertical" x:Name="WholeContent" Margin="15,15,15,40">
                            <ContentPresenter />
                        </WrapPanel>
                    </Border>

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                        <Button x:Name="buttonOkay" Content="Okay" HorizontalAlignment="Center" Margin="0,0,5,0" Command="{TemplateBinding CommandConfirm}" />
                        <Button x:Name="buttonCancel" Content="Cancel" HorizontalAlignment="Center" Margin="5,0,0,0" Command="{TemplateBinding CommandCancel}" Background="#FFC3714A" BorderBrush="#FFC34A4A" />
                        <!-- Executed="OnCloseMe" -->
                    </StackPanel>

                    <Grid.RenderTransform>
                        <ScaleTransform ScaleY="1" />
                    </Grid.RenderTransform>
                </Grid>
                <ControlTemplate.Triggers>
                    <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                        <BeginStoryboard Name="loaded">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                                    <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="window:WPopupTimer.RoutedPopupClose">
                        <StopStoryboard BeginStoryboardName="loaded" />
                        <BeginStoryboard Storyboard="{StaticResource storyEnd}" />
                    </EventTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style TargetType="Window" x:Key="PopupWindowStyle">
                <Setter Property="Template" Value="{StaticResource PopupTemplate}" />
                <Setter Property="Height" Value="250" />
                <Setter Property="Width" Value="300" />
                <Setter Property="ResizeMode" Value="NoResize" />
                <Setter Property="AllowsTransparency" Value="True" />
                <Setter Property="WindowStyle" Value="None" />
                <Setter Property="Background" Value="Transparent" />
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>