<base:BaseWindow
        x:Class="VTility.Windows.WPopupTimerNew"
        x:Name="mainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:base="clr-namespace:VTility"
        xmlns:window="clr-namespace:VTility.Windows"
        mc:Ignorable="d"
        Title="Popup"
        Height="250"
        Width="300"
        WindowStyle="None"
        AllowsTransparency="True"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="Transparent"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        FontFamily="{materialDesign:MaterialDesignFont}">
    <Grid x:Name="popupGrid" RenderTransformOrigin="0,1">
        <!--<control:PopupUserControl x:Name="popupFrame" DataContext="{Binding ElementName=mainWindow}">-->

        <!-- Notification area -->
        <Border Background="#FF252525" CornerRadius="10">

            <WrapPanel Orientation="Vertical" x:Name="WholeContent" Margin="15,15,15,40">

                <TextBlock TextWrapping="Wrap">
                        <Bold>Timer notification</Bold>
                </TextBlock>

                <TextBlock TextWrapping="Wrap">
                        Please enter time and action for the new timer.
                </TextBlock>

                <Separator />
                <Separator />

                <WrapPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,5,0,0">

                    <!--<TextBox Text="00:00:00" Margin="0,0,15,0" Width="60" />-->

                    <materialDesign:TimePicker x:Name="TimerTime" SelectedTimeFormat="Long" Is24Hours="true" />

                    <ComboBox x:Name="TimerAction" Margin="15,0,0,0" SelectedIndex="0" HorizontalAlignment="Right" Width="100">
                        <ComboBoxItem Content="Notification" />
                        <ComboBoxItem Content="Shutdown" />
                        <ComboBoxItem Content="Custom" />
                    </ComboBox>

                    <CheckBox x:Name="WarnCheck" Content="Warn" Margin="5 5 0 5" />
                </WrapPanel>

                <WrapPanel Orientation="Horizontal">
                    <WrapPanel.Style>
                        <Style TargetType="{x:Type WrapPanel}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=TimerAction, Path=SelectedItem}" Value="Shutdown">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=TimerAction, Path=SelectedItem}" Value="Notification">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=TimerAction, Path=SelectedItem}" Value="Custom">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </WrapPanel.Style>

                    <ComboBox x:Name="ShutdownAction" SelectedIndex="0" Width="100">
                        <ComboBoxItem Content="Shutdown" />
                        <ComboBoxItem Content="Reboot" />
                        <ComboBoxItem Content="Sleep" />
                    </ComboBox>
                    <CheckBox x:Name="ShutdownForce" IsChecked="True" Content="Force" />
                </WrapPanel>

                <TextBox x:Name="TimerName" Text="Identifier"></TextBox>
            </WrapPanel>
        </Border>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
            <Button x:Name="buttonOkay" Content="Okay" HorizontalAlignment="Center" Margin="0,0,5,0" />
            <Button x:Name="buttonCancel" Content="Cancel" HorizontalAlignment="Center" Margin="5,0,0,0" Background="#FFC3714A" BorderBrush="#FFC34A4A" />
        </StackPanel>

        <!--</control:PopupUserControl>-->

        <Grid.Triggers>
            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                <BeginStoryboard Name="loaded">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                            <SplineDoubleKeyFrame KeyTime="0:0:0" Value="0" />
                            <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="window:WPopupTimerNew.PopupClose">
                <StopStoryboard BeginStoryboardName="loaded" />
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Completed="DoubleAnimationUsingKeyFrames_Completed">
                            <SplineDoubleKeyFrame KeyTime="0:0:0" Value="1" />
                            <SplineDoubleKeyFrame KeyTime="0:0:1.5" Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Grid.Triggers>

        <Grid.RenderTransform>
            <ScaleTransform ScaleY="1" />
        </Grid.RenderTransform>
    </Grid>
</base:BaseWindow>